//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsD2CD171975E1052D804E8B1573E2C53955DA8636D3C787789D3A9B8AF182E4F0))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsD2CD171975E1052D804E8B1573E2C53955DA8636D3C787789D3A9B8AF182E4F0 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsD2CD171975E1052D804E8B1573E2C53955DA8636D3C787789D3A9B8AF182E4F0()
        {
            this.EdmEntityContainerName = "Entities";
            this.StoreEntityContainerName = "ModelStoreContainer";
            this.HashOverMappingClosure = "f760e8e1df642d7df212648570666b6a77df01d404a239934f73b086ff07bb54";
            this.HashOverAllExtentViews = "9dee6201725a143607f367df1bc659166a357d28eb1588511a25d04112034640";
            this.ViewCount = 2;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for ModelStoreContainer.Appusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ModelStoreContainer.Appusers", @"
    SELECT VALUE -- Constructing Appusers
        [Model.Store.Appusers](T1.Appusers_Id, T1.Appusers_Username, T1.Appusers_Password, T1.Appusers_SessionId, T1.Appusers_ExpiredAt)
    FROM (
        SELECT 
            T.Id AS Appusers_Id, 
            T.Username AS Appusers_Username, 
            T.Password AS Appusers_Password, 
            T.SessionId AS Appusers_SessionId, 
            T.ExpiredAt AS Appusers_ExpiredAt, 
            True AS _from0
        FROM Entities.Appusers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Entities.Appusers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Entities.Appusers", @"
    SELECT VALUE -- Constructing Appusers
        [Model.Appuser](T1.Appuser_Id, T1.Appuser_Username, T1.Appuser_Password, T1.Appuser_SessionId, T1.Appuser_ExpiredAt)
    FROM (
        SELECT 
            T.Id AS Appuser_Id, 
            T.Username AS Appuser_Username, 
            T.Password AS Appuser_Password, 
            T.SessionId AS Appuser_SessionId, 
            T.ExpiredAt AS Appuser_ExpiredAt, 
            True AS _from0
        FROM ModelStoreContainer.Appusers AS T
    ) AS T1");
        }
    }
}
